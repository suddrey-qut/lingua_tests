#!/usr/bin/env python

import rospy

from rv_msgs.msg import Observation
from rv_msgs.msg import Detection

from lingua_kb.srv import Tell, TellRequest

import timeit

last_detection = 0

def callback(msg):
  global last_detection
  print(len(msg.detections))
  if len(msg.detections) > 0:
    last_detection = timeit.default_timer()

rospy.init_node('person_detector')

service = rospy.ServiceProxy('/kb/tell', Tell)
service.wait_for_service()

rospy.Subscriber('/faces', Observation, callback, queue_size=1)

print('Ready')
while not rospy.is_shutdown():
  print(timeit.default_timer() - last_detection)
  if timeit.default_timer() - last_detection < 2:
    service(TellRequest('(class_label person p1)'))
  else:
    service(TellRequest('(not (class_label person p1))'))
  rospy.sleep(0.1)

